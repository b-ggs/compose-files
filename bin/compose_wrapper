#!/usr/bin/env python3

import os
import sys
from shutil import which

def print_help():
    sys.stderr.write('Usage:\n')
    sys.stderr.write(f"  {sys.argv[0]} [DIR] [up|down]\n")

if not len(sys.argv) == 3:
    print_help()
    exit(1)

compose_dir = os.path.realpath(sys.argv[1])
compose_command = sys.argv[2]

if which('docker-compose') is None:
    sys.stderr.write('docker-compose is not installed or not in PATH.\n')
    exit(1)

if not os.path.exists(compose_dir):
    sys.stderr.write(f"{compose_dir} does not exist.\n")
    exit(1)

compose_file_path = os.path.join(compose_dir, 'docker-compose.yml')

if not os.path.exists(compose_file_path):
    sys.stderr.write(f"{compose_file_path} does not exist.\n")
    exit(1)

override_example_compose_file_path = os.path.join(compose_dir, 'docker-compose.override.example.yml')
override_compose_file_path = os.path.join(compose_dir, 'docker-compose.override.yml')

if os.path.exists(override_example_compose_file_path):
    if os.path.exists(override_compose_file_path):
        has_override = True
    else:
        sys.stderr.write(f"Found example file {override_example_compose_file_path} but could not find {override_compose_file_path}\n")
        exit(1)
else:
    has_override = False

cmd = 'docker-compose'
args = [cmd, '-f', compose_file_path]

if has_override:
    args.extend(['-f', override_compose_file_path])

if compose_command == 'up':
    args.extend(['up', '-d'])
elif compose_command == 'down':
    args.extend(['down'])
else:
    print_help()
    exit(1)

os.execvp(cmd, args)
